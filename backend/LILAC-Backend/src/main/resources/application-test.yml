spring:
  config:
    activate:
      on-profile: test
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  sql:
    init:
      mode: always
  jpa:
    hibernate:
      ddl-auto: create-drop
    database: h2
    generate-ddl: true
    defer-datasource-initialization: true
    show-sql: true
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;MODE=MySQL;
    username: ssafy
    password:

  data:
    mongodb:
      host: localhost
      port: 27017
      authentication-database: admin
      database: lilac_mongodb
      username: ssafy
      password: ssafy

  redis:
    lettuce:
      pool:
        max-active: 5
        max-idle: 5
        min-idle: 2
    host: localhost
    port: 6379
    password: ssafy

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

  security:
    user:
      name: ${ADMIN_NAME}
      password: ${ADMIN_PASSWORD}
      roles: ADMIN
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_ID}
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            client-authentication-method: POST
            client-secret: ${KAKAO_SECRET}
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client_name: kakao

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


jwt:
  header: Authorization
  secret: hellothisislilacmusicsdevelopversionsecretkey
  access-token-validity-milliseconds: 1800000
  refresh-token-validity-milliseconds: 604800000

logging:
  level:
    root: info
    com.lilacmusic: debug

cloud:
  aws:
    access_key: ${AWS_ACCESS_KEY_ID}
    secret_key: ${AWS_SECRET_KEY}
    s3:
      bucket: ${S3_BUCKET}
    region:
      static: ${AWS_REGION}
    stack:
      auto: false
    mediaconvert:
      endpoint: ${MEDIACONVERT_ENDPOINT}
      role: ${IAM_ROLE}
    cloudfront:
      url_prefix: ${CLOUDFRONT_PREFIX}

#cloud:
#  aws:
#    s3:
#      bucket:
#    region:
#      static: ap-northeast-2
#    stack:
#      auto: false
#    cloudfront:
